Given a string, find the length of the longest substring T that contains at most k distinct characters.

For example, Given s = “eceba” and k = 2,

T is "ece" which its length is 3.

Seen this question in a real interview before?  




class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if (s == null || s.length() == 0) return 0;
        int i = 0, num = 0, max = 0;
        int[] count = new int[256];                                 //256 is enough, hashset is no need
        for (int j = 0; j < s.length(); j++) {
            if (count[s.charAt(j)] == 0) {
                num++;
            }
            count[s.charAt(j)]++;
            while (num > k) {
                count[s.charAt(i)]--;
                if (count[s.charAt(i++)] == 0) {
                    num--;
                    break;
                }
            }
            max = Math.max(max, j - i + 1);
        }
        
        return max;
    }
}